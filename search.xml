<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ping www.baidu.com 时出现 www.a.shifen.com</title>
      <link href="/2022/05/26/ping-www-baidu-com-shi-chu-xian-www-a-shifen-com/"/>
      <url>/2022/05/26/ping-www-baidu-com-shi-chu-xian-www-a-shifen-com/</url>
      
        <content type="html"><![CDATA[<h1 id="ping-www-baidu-com-时出现www-a-shifen-com"><a href="#ping-www-baidu-com-时出现www-a-shifen-com" class="headerlink" title="ping www.baidu.com 时出现www.a.shifen.com"></a>ping <a href="http://www.baidu.com/">www.baidu.com</a> 时出现<a href="http://www.a.shifen.com/">www.a.shifen.com</a></h1><p>在测试计算机网络状况时ping了百度，结果结束时出现了以下结果：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">D</span><span class="token operator">:</span>\<span class="token class-name">Blog</span><span class="token operator">></span>ping www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com正在 <span class="token class-name">Ping</span> www<span class="token punctuation">.</span>a<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com <span class="token punctuation">[</span><span class="token number">36.152</span><span class="token number">.44</span><span class="token number">.95</span><span class="token punctuation">]</span> 具有 <span class="token number">32</span> 字节的数据<span class="token operator">:</span>   来自 <span class="token number">36.152</span><span class="token number">.44</span><span class="token number">.95</span> 的回复<span class="token operator">:</span> 字节<span class="token operator">=</span><span class="token number">32</span> 时间<span class="token operator">=</span><span class="token number">24</span>ms TTL<span class="token operator">=</span><span class="token number">51</span>来自 <span class="token number">36.152</span><span class="token number">.44</span><span class="token number">.95</span> 的回复<span class="token operator">:</span> 字节<span class="token operator">=</span><span class="token number">32</span> 时间<span class="token operator">=</span><span class="token number">26</span>ms TTL<span class="token operator">=</span><span class="token number">51</span>来自 <span class="token number">36.152</span><span class="token number">.44</span><span class="token number">.95</span> 的回复<span class="token operator">:</span> 字节<span class="token operator">=</span><span class="token number">32</span> 时间<span class="token operator">=</span><span class="token number">26</span>ms TTL<span class="token operator">=</span><span class="token number">51</span>来自 <span class="token number">36.152</span><span class="token number">.44</span><span class="token number">.95</span> 的回复<span class="token operator">:</span> 字节<span class="token operator">=</span><span class="token number">32</span> 时间<span class="token operator">=</span><span class="token number">28</span>ms TTL<span class="token operator">=</span><span class="token number">51</span><span class="token number">36.152</span><span class="token number">.44</span><span class="token number">.95</span> 的 <span class="token class-name">Ping</span> 统计信息<span class="token operator">:</span>    数据包<span class="token operator">:</span> 已发送 <span class="token operator">=</span> <span class="token number">4</span>，已接收 <span class="token operator">=</span> <span class="token number">4</span>，丢失 <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">%</span> 丢失<span class="token punctuation">)</span>，        往返行程的估计时间<span class="token punctuation">(</span>以毫秒为单位<span class="token punctuation">)</span><span class="token operator">:</span>    最短 <span class="token operator">=</span> <span class="token number">24</span>ms，最长 <span class="token operator">=</span> <span class="token number">28</span>ms，平均 <span class="token operator">=</span> <span class="token number">26</span>ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>好奇之下，寻找了诸多解释：</p><p>if现在我用一台电脑，通过<mark>ISP</mark>接入互联网，那么<mark>ISP</mark>就会分配给我一个<mark>DNS</mark>服务器（非权威服务器）。</p><p>now，我的computer向这台<mark>ISPDNS</mark>发起请求查询<a href="http://www.baidu.com/">www.baidu.com</a> 。</p><p>首先，<mark>ISPDNS</mark>会检查自己的缓存中有没有这个地址，有的话直接返回给我的PC，没有的话，<mark>ISPDNS</mark>会把请求发送给根服务器（13台）。</p><p>根服务器发现是<mark>.com</mark>结尾的即是<mark>.com</mark>这个顶级域名下的，就告诉请求者负责解析<mark>.com</mark>的DNS服务器。（目前百度有4台baidu.com的顶级域名服务器）。</p><p>ISPDNS再次向baidu.com这个域的权威服务器发起请求，baidu.com收到后，查一下www这台主机，然后把它的IP返回给IPSDNS，然后IPSDNS把地址返回给我的PC，并且存入告诉cache中，以便再次访问。</p><p>&#x2F;&#x2F;当然这是完美的解析步骤，不过百度的DNS没这么简单。</p><blockquote><p>参考：计算机网络——自顶向下方法——DNS工作机理概述</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">D</span><span class="token operator">:</span>\<span class="token class-name">Blog</span><span class="token operator">></span>nslookup www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token class-name">Server</span><span class="token operator">:</span>    <span class="token number">211.140</span><span class="token number">.13</span><span class="token number">.188</span><span class="token class-name">Address</span><span class="token operator">:</span>  <span class="token number">211.140</span><span class="token number">.13</span><span class="token number">.188</span>#<span class="token number">53</span><span class="token class-name">Non</span><span class="token operator">-</span>authoritative answer<span class="token operator">:</span>www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com  canonical name <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">www<span class="token punctuation">.</span>a<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span></span>Name</span><span class="token operator">:</span>  www<span class="token punctuation">.</span>a<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token class-name">Address</span><span class="token operator">:</span> <span class="token number">220.181</span><span class="token number">.112</span><span class="token number">.76</span><span class="token class-name">Name</span><span class="token operator">:</span>  www<span class="token punctuation">.</span>a<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token class-name">Address</span><span class="token operator">:</span> <span class="token number">220.181</span><span class="token number">.111</span><span class="token number">.111</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>百度有个cname&#x3D;<a href="http://www.a.shifen.com/">www.a.shifen.com</a> .的别名，这所怎么一个过程呢？用dig工具跟踪一下。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">D</span><span class="token operator">:</span>\<span class="token class-name">Blog</span><span class="token operator">></span>dig <span class="token operator">+</span>trace www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">;</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&lt;</span><span class="token punctuation">></span><span class="token punctuation">></span></span> <span class="token class-name">DiG</span> <span class="token number">9.8</span><span class="token number">.2</span>rc1<span class="token operator">-</span><span class="token class-name">RedHat</span><span class="token operator">-</span><span class="token number">9.8</span><span class="token number">.2</span><span class="token operator">-</span><span class="token number">0.2</span><span class="token punctuation">.</span>rc1<span class="token punctuation">.</span>fc16 <span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&lt;</span><span class="token punctuation">></span><span class="token punctuation">></span></span> <span class="token operator">+</span>trace www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">;</span><span class="token punctuation">;</span> global options<span class="token operator">:</span> <span class="token operator">+</span>cmd<span class="token punctuation">.</span>      <span class="token number">167778</span>  IN  NS  b<span class="token punctuation">.</span>root<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span><span class="token punctuation">.</span>      <span class="token number">167778</span>  IN  NS  d<span class="token punctuation">.</span>root<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span><span class="token punctuation">.</span>      <span class="token number">167778</span>  IN  NS  f<span class="token punctuation">.</span>root<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span><span class="token punctuation">.</span>      <span class="token number">167778</span>  IN  NS  m<span class="token punctuation">.</span>root<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span><span class="token punctuation">.</span>      <span class="token number">167778</span>  IN  NS  e<span class="token punctuation">.</span>root<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span><span class="token punctuation">.</span>      <span class="token number">167778</span>  IN  NS  h<span class="token punctuation">.</span>root<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span><span class="token punctuation">.</span>      <span class="token number">167778</span>  IN  NS  l<span class="token punctuation">.</span>root<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span><span class="token punctuation">.</span>      <span class="token number">167778</span>  IN  NS  g<span class="token punctuation">.</span>root<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span><span class="token punctuation">.</span>      <span class="token number">167778</span>  IN  NS  i<span class="token punctuation">.</span>root<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span><span class="token punctuation">.</span>      <span class="token number">167778</span>  IN  NS  k<span class="token punctuation">.</span>root<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span><span class="token punctuation">.</span>      <span class="token number">167778</span>  IN  NS  c<span class="token punctuation">.</span>root<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span><span class="token punctuation">.</span>      <span class="token number">167778</span>  IN  NS  a<span class="token punctuation">.</span>root<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span><span class="token punctuation">.</span>      <span class="token number">167778</span>  IN  NS  j<span class="token punctuation">.</span>root<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span><span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token class-name">Received</span> <span class="token number">228</span> bytes from <span class="token number">211.140</span><span class="token number">.13</span><span class="token number">.188</span>#<span class="token function">53</span><span class="token punctuation">(</span><span class="token number">211.140</span><span class="token number">.13</span><span class="token number">.188</span><span class="token punctuation">)</span> in <span class="token number">1841</span> ms<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>（<span class="token number">1</span>）com<span class="token punctuation">.</span>      <span class="token number">172800</span>  IN  NS  a<span class="token punctuation">.</span>gtld<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span>com<span class="token punctuation">.</span>      <span class="token number">172800</span>  IN  NS  b<span class="token punctuation">.</span>gtld<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span>com<span class="token punctuation">.</span>      <span class="token number">172800</span>  IN  NS  c<span class="token punctuation">.</span>gtld<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span>com<span class="token punctuation">.</span>      <span class="token number">172800</span>  IN  NS  d<span class="token punctuation">.</span>gtld<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span>com<span class="token punctuation">.</span>      <span class="token number">172800</span>  IN  NS  e<span class="token punctuation">.</span>gtld<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span>com<span class="token punctuation">.</span>      <span class="token number">172800</span>  IN  NS  f<span class="token punctuation">.</span>gtld<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span>com<span class="token punctuation">.</span>      <span class="token number">172800</span>  IN  NS  g<span class="token punctuation">.</span>gtld<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span>com<span class="token punctuation">.</span>      <span class="token number">172800</span>  IN  NS  h<span class="token punctuation">.</span>gtld<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span>com<span class="token punctuation">.</span>      <span class="token number">172800</span>  IN  NS  i<span class="token punctuation">.</span>gtld<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span>com<span class="token punctuation">.</span>      <span class="token number">172800</span>  IN  NS  j<span class="token punctuation">.</span>gtld<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span>com<span class="token punctuation">.</span>      <span class="token number">172800</span>  IN  NS  k<span class="token punctuation">.</span>gtld<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span>com<span class="token punctuation">.</span>      <span class="token number">172800</span>  IN  NS  l<span class="token punctuation">.</span>gtld<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span>com<span class="token punctuation">.</span>      <span class="token number">172800</span>  IN  NS  m<span class="token punctuation">.</span>gtld<span class="token operator">-</span>servers<span class="token punctuation">.</span>net<span class="token punctuation">.</span><span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token class-name">Received</span> <span class="token number">503</span> bytes from <span class="token number">198.41</span><span class="token number">.0</span><span class="token number">.4</span>#<span class="token function">53</span><span class="token punctuation">(</span><span class="token number">198.41</span><span class="token number">.0</span><span class="token number">.4</span><span class="token punctuation">)</span> in <span class="token number">1884</span> ms<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>（<span class="token number">2</span>）baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">172800</span>  IN  NS  dns<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">172800</span>  IN  NS  ns2<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">172800</span>  IN  NS  ns3<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">172800</span>  IN  NS  ns4<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span><span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token class-name">Received</span> <span class="token number">167</span> bytes from <span class="token number">192.31</span><span class="token number">.80</span><span class="token number">.30</span>#<span class="token function">53</span><span class="token punctuation">(</span><span class="token number">192.31</span><span class="token number">.80</span><span class="token number">.30</span><span class="token punctuation">)</span> in <span class="token number">305</span> ms<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>（<span class="token number">3</span>）www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">1200</span>  IN  CNAME  www<span class="token punctuation">.</span>a<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>a<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">86444</span>  IN  NS  ns4<span class="token punctuation">.</span>a<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>a<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">86444</span>  IN  NS  ns7<span class="token punctuation">.</span>a<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>a<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">86444</span>  IN  NS  ns9<span class="token punctuation">.</span>a<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>a<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">86444</span>  IN  NS  ns5<span class="token punctuation">.</span>a<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span><span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token class-name">Received</span> <span class="token number">194</span> bytes from <span class="token number">202.108</span><span class="token number">.22</span><span class="token number">.220</span>#<span class="token function">53</span><span class="token punctuation">(</span><span class="token number">202.108</span><span class="token number">.22</span><span class="token number">.220</span><span class="token punctuation">)</span> in <span class="token number">68</span> ms<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>（<span class="token number">4</span>）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>DIG工具会在本地计算机做迭代，然后记录查询的过程。</p><p>第一步是我这台PC的<mark>ISPDNS</mark>获取到13个根服务器的13个IP和主机名【b-j】.root-servers.net。</p><p>第二步是向其中的一台根域服务器198.41.0.4发送<a href="http://www.baidu.com/">www.baidu.com</a> 的请求，他返回com.顶级域的服务器的IP（未显示）和名称。</p><p>第三步是向com.域的一台服务器192.31.80.30请求<a href="http://www.baidu.com/">www.baidu.com</a> ，他返回来baidu.com域发服务器IP（未显示）和名称.</p><p>第四步，向百度的顶级域名服务器dns.baidu.com.请求<a href="http://www.baidu.com/">www.baidu.com</a> ，他发现这个www有别名叫<a href="http://www.a.shifen.com/">www.a.shifen.com</a> 。</p><p>按照一般逻辑，当<mark>dns</mark>请求到别名时，查询都会终止，而所重新发起查询别名的请求，所以此处应该返回的是<a href="http://www.a.shifen.com/">www.a.shifen.com</a> . 但是为什么返回的是a.shifen.com这个NS呢？</p><p>此处我们可以用：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">D</span><span class="token operator">:</span>\<span class="token class-name">Blog</span><span class="token operator">></span>dig <span class="token operator">+</span>trace shifen<span class="token punctuation">.</span>comshifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">172800</span>  IN  NS  dns<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">172800</span>  IN  NS  ns2<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">172800</span>  IN  NS  ns3<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">172800</span>  IN  NS  ns4<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span><span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token class-name">Received</span> <span class="token number">170</span> bytes from <span class="token number">192.26</span><span class="token number">.92</span><span class="token number">.30</span>#<span class="token function">53</span><span class="token punctuation">(</span><span class="token number">192.26</span><span class="token number">.92</span><span class="token number">.30</span><span class="token punctuation">)</span> in <span class="token number">325</span> ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现shifen.com的顶级域名服务器和baidu.com的域名服务器是同一台！</p><p>当拿到<a href="http://www.baidu.com/">www.baidu.com</a> 的别名<a href="http://www.a.shifen.com/">www.a.shifen.com</a> 的时候，本来要重新到com域查找shifen.com的NS，又因为，两个域 在同一台NS上，所以直接向本机发起了shifen.com域发现请求的<a href="http://www.a.shifen.com/">www.a.shifen.com</a> 是属于a.shifen.com这个域的，于是 就把a.shifen.com的这个NS和IP返回，让我到a.shifen.com这个域的域名服务器上查询<a href="http://www.a.shifen.com/">www.a.shifen.com</a> 。</p><p>于是</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">7200</span>  IN  <span class="token class-name">A</span>  <span class="token number">202.108</span><span class="token number">.250</span><span class="token number">.218</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">86400</span>  IN  NS  ns3<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">86400</span>  IN  NS  ns1<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">86400</span>  IN  NS  ns2<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span>shifen<span class="token punctuation">.</span>com<span class="token punctuation">.</span>    <span class="token number">86400</span>  IN  NS  ns4<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">.</span><span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token class-name">Received</span> <span class="token number">186</span> bytes from <span class="token number">220.181</span><span class="token number">.37</span><span class="token number">.10</span>#<span class="token function">53</span><span class="token punctuation">(</span><span class="token number">220.181</span><span class="token number">.37</span><span class="token number">.10</span><span class="token punctuation">)</span> in <span class="token number">61</span> ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>拿到一条A记录，最终也就是<a href="http://www.baidu.com/">www.baidu.com</a> 的IP地址了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java使用枚举类实现自定义异常</title>
      <link href="/2022/04/23/java-shi-yong-mei-ju-lei-shi-xian-zi-ding-yi-yi-chang/"/>
      <url>/2022/04/23/java-shi-yong-mei-ju-lei-shi-xian-zi-ding-yi-yi-chang/</url>
      
        <content type="html"><![CDATA[<h1 id="Java使用枚举类实现自定义异常"><a href="#Java使用枚举类实现自定义异常" class="headerlink" title="Java使用枚举类实现自定义异常"></a>Java使用枚举类实现自定义异常</h1><blockquote><p>文章开头先阐述一些关于<mark>异常</mark>的知识：</p></blockquote><ol><li>Java异常的根本父类为Throwable, Throwable有两个子类：Error和Exception。</li><li>Exception常见的子类有：<em>DataFormatException, IOException， NoSuchFieldException， RuntimeException, SQLException, TimeoutException。</em></li><li><em>RuntimeException</em>常见的子类有：<em>BufferOverflowException, ClassCastException, IndexOutOfBoundsException,NullPointerException, SystemException。</em></li><li><em>Error</em>不需要讨论，这些错误是正常编码不会出现或者在程序层面无法处理的事情。</li><li><em>Error</em>和<em>RuntimeException</em>是运行时异常，其他的都是非运行时异常。运行时异常即需要<em>try-catch</em>包裹才可正常编译通过的异常。</li></ol><h2 id="现在开始编写自定义异常。"><a href="#现在开始编写自定义异常。" class="headerlink" title="现在开始编写自定义异常。"></a>现在开始编写自定义异常。</h2><h4 id="1-创建ErrorCode接口"><a href="#1-创建ErrorCode接口" class="headerlink" title="1.  创建ErrorCode接口"></a>1.  创建<mark>ErrorCode</mark>接口</h4><blockquote><p>编写自定义异常代码</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ErrorCode</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 获取错误码     * @return     */</span>    <span class="token class-name">String</span> <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 获取错误信息     * @return     */</span>    <span class="token class-name">String</span> <span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-创建MyCodeEnum枚举类"><a href="#2-创建MyCodeEnum枚举类" class="headerlink" title="2. 创建MyCodeEnum枚举类"></a>2. 创建<mark>MyCodeEnum</mark>枚举类</h4><blockquote><p>编写代码实现接口中的所有方法</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">MyCodeEnum</span> <span class="token keyword">implements</span> <span class="token class-name">ErrorCode</span><span class="token punctuation">&#123;</span>    <span class="token function">NOT_FOUND_PAGE</span><span class="token punctuation">(</span><span class="token string">"404"</span><span class="token punctuation">,</span><span class="token string">"找不到网站资源"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">NOT_FOUND_FILE</span><span class="token punctuation">(</span><span class="token string">"888"</span><span class="token punctuation">,</span><span class="token string">"找不到文件资源"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">NOT_O_TEN</span><span class="token punctuation">(</span><span class="token string">"233"</span><span class="token punctuation">,</span><span class="token string">"只能求10以内的加法"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">;</span>    <span class="token class-name">MyCodeEnum</span><span class="token punctuation">(</span><span class="token class-name">String</span> code<span class="token punctuation">,</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> code<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> msg<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> code<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> msg<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-创建MyException类继承RunTimeException"><a href="#3-创建MyException类继承RunTimeException" class="headerlink" title="3. 创建MyException类继承RunTimeException"></a>3. 创建<mark>MyException</mark>类继承<mark>RunTimeException</mark></h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyException</span> <span class="token keyword">extends</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">MyException</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">MyException</span><span class="token punctuation">(</span><span class="token class-name">ErrorCode</span> errorCode<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>errorCode<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-在StringTest类中测试自定义异常，同时可通过枚举选择异常类型"><a href="#4-在StringTest类中测试自定义异常，同时可通过枚举选择异常类型" class="headerlink" title="4. 在StringTest类中测试自定义异常，同时可通过枚举选择异常类型"></a>4. 在<mark>StringTest</mark>类中测试自定义异常，同时可通过枚举选择异常类型</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThrowTest</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">int</span> numberA<span class="token punctuation">,</span> <span class="token keyword">int</span> numberB<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MyException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>numberA <span class="token operator">></span> <span class="token number">10</span> <span class="token operator">||</span> numberB <span class="token operator">></span> <span class="token number">10</span> <span class="token operator">||</span> numberA <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> numberB <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">MyException</span><span class="token punctuation">(</span><span class="token class-name">MyCodeEnum</span><span class="token punctuation">.</span>NOT_O_TEN<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> numberA <span class="token operator">+</span> numberB<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"两数之和为: "</span> <span class="token operator">+</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MyException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>异常抛出结果如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>company<span class="token punctuation">.</span></span>MyException</span><span class="token operator">:</span> 只能求<span class="token number">10</span>以内的加法<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Java知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java单例设计模式</title>
      <link href="/2022/04/17/java-dan-li-she-ji-mo-shi/"/>
      <url>/2022/04/17/java-dan-li-she-ji-mo-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="Java单例设计模式"><a href="#Java单例设计模式" class="headerlink" title="Java单例设计模式"></a>Java单例设计模式</h1><h3 id="单例设计模式是怎么来的"><a href="#单例设计模式是怎么来的" class="headerlink" title="单例设计模式是怎么来的"></a>单例设计模式是怎么来的</h3><ul><li><mark>private static</mark>定义变量和方法只能通过类名调用使用，可以看做是所有类都必须要做的事情，而对象无法使用，对象无权选择或者不选择。这就衍生出了一种设计模式：<mark>单例设计模式</mark></li></ul><hr><h3 id="单例设计模式怎么用？"><a href="#单例设计模式怎么用？" class="headerlink" title="单例设计模式怎么用？"></a>单例设计模式怎么用？</h3><ul><li>单例设计模式用<mark>static</mark>来保证某一类只可<mark>new</mark>一次的机会，而且不提供对外<mark>new</mark>的方法，既不提供<mark>new</mark>的方式，只提供对外操作的方法。即保证一个类仅有一个实例，无法克隆，并提供一个访问它的全局访问点。</li></ul><p>通过以下实例来深入理解单例设计模式的应用</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Earth</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// new一个新地球只有Earth类可以调用</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Earth</span> earthInstance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Earth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 无参构造器，保证外部无法new新的Earth</span>    <span class="token keyword">private</span> <span class="token class-name">Earth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token punctuation">&#125;</span>        <span class="token comment">// 提供Earth的全局访问点</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Earth</span> <span class="token function">getEarthInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> earthInstance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> show <span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello,This is Earth"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> main <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 不合法的构造函数</span>        <span class="token comment">// 编译时错误，构造函数 Earth() 是不可见的</span>        <span class="token comment">// Earth earth = new Earth();</span>                <span class="token comment">// 获取唯一可用对象</span>        <span class="token class-name">Earth</span> earth <span class="token operator">=</span> <span class="token class-name">Earth</span><span class="token punctuation">.</span><span class="token function">getEarthIntance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 显示信息</span>        earth<span class="token punctuation">.</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打印结果如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token string">"Hello,This is Earth"</span><span class="token comment">// 在Java基础API部分，通过查看底层实现代码，可发现Calendar(日期类)使用此设计模式，下方演示。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> main <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Calendar</span> calendar <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 打印当前时间</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>calendar<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> year <span class="token operator">=</span> calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span>YEAR<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 打印当前年份</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"year = "</span> <span class="token operator">+</span> year<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打印结果如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Mon</span> <span class="token class-name">Apr</span> <span class="token number">18</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">08</span><span class="token operator">:</span><span class="token number">52</span> CST <span class="token number">2022</span>year <span class="token operator">=</span> <span class="token number">2022</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Java知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查看电脑预装操作系统密钥</title>
      <link href="/2022/03/09/cha-kan-dian-nao-yu-zhuang-cao-zuo-xi-tong-mi-yao/"/>
      <url>/2022/03/09/cha-kan-dian-nao-yu-zhuang-cao-zuo-xi-tong-mi-yao/</url>
      
        <content type="html"><![CDATA[<h1 id="查看电脑预装操作系统密钥"><a href="#查看电脑预装操作系统密钥" class="headerlink" title="查看电脑预装操作系统密钥"></a>查看电脑预装操作系统密钥</h1><h3 id="通过cmd命令即可查看"><a href="#通过cmd命令即可查看" class="headerlink" title="通过cmd命令即可查看"></a>通过cmd命令即可查看</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">wmic path softwarelicensingservice get OA3xOriginalProductKey<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过上述命令即可查看电脑预装操作系统的密钥</p><hr><h3 id="接下来提供修改系统密钥的方法："><a href="#接下来提供修改系统密钥的方法：" class="headerlink" title="接下来提供修改系统密钥的方法："></a>接下来提供修改系统密钥的方法：</h3><h4 id="第一种：通过设置修改"><a href="#第一种：通过设置修改" class="headerlink" title="第一种：通过设置修改"></a>第一种：通过设置修改</h4><p>我们可以通过Windows设置进行修改，通过<code>Win热键+i</code>进入设置界面，点击系统，点击下方关于即可找到修改密钥方法。</p><h4 id="第二种：通过cmd指令修改"><a href="#第二种：通过cmd指令修改" class="headerlink" title="第二种：通过cmd指令修改"></a>第二种：通过cmd指令修改</h4><p>1.以管理员身份打开命令提示符</p><p>2.输入指令</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">slmgr.vbs &#x2F;upk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>卸载系统已有密钥</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">slmgr &#x2F;ipk (系统密钥)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装系统密钥，括号内输入购买的系统密钥</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">slmgr.vbs -ato<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>激活密钥</p><p>通过三行指令即可修改系统密钥</p>]]></content>
      
      
      
        <tags>
            
            <tag> 其他技术 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
